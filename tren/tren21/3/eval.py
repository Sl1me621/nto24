# -*- coding: utf-8 -*-
import cv2
## TODO: Допишите импорт библиотек, которые собираетесь использовать


def load_final_model():
    """ Функция осуществляет загрузку модели нейронной сети из файла.
        Выходные параметры: загруженная модель

        Если вы не собираетесь использовать эту функцию, пусть возвращает пустой список []
        Если вы используете несколько моделей, возвращайте их список [model1, model2]
    """

    ## TODO: Отредактируйте функцию по своему усмотрению.
    ## Модель нейронной сети, загрузите вместе с решением.
    ## Если вы не собираетесь использовать эту функцию, пусть возвращает пустой список []

    # model = tensorflow.load_model(MODEL_FILE_NAME)
    model = []
    return model


def standardize_input(image):
    """Приведение изображений к стандартному виду.
    Входные данные: изображение (bgr); прочитаны cv2.imread()
    Выходные данные: стандартизированное изображений.
    """
    standard_im = image  # по умолчанию, функция не меняет изображения
    ## TODO: Если вы хотите преобразовать изображение в формат,
    ## одинаковый для всех изображений, сделайте это здесь.

    return standard_im


def predict_label_and_box(image, model):
    """
         Функция, детектирующая светофоры и распознающая их сигналы
         Входные данные: изображение (bgr), модель нейронной сети
         Выходные данные: список с метками объектов и координататами ограничивающих рамок

         Формат вывода: [[label, (x, y, x2, y2)]]
                        label - текстовая метка с названием сигнала светофора
                        x и y - координаты левого верхнего угла ограничивающей рамки
                        x2 и y2 - координаты правого нижнего угла ограничивающей рамки

         Примеры вывода: [["off", (10, 14, 18, 25)],
                          ["yellow+red", (110, 114, 118, 215)]] - если обнаружили два светофора

                         [["green", (10, 11, 18, 15)]] - если обнаружили один светофор

                         [] - если не обнаружили светофоры
    """

    ## TODO: Отредактируйте эту функцию по своему усмотрению.
    # Вы можете пользоваться нейросетевыми подходами, классическими методами машинного обучения другими методами
    # Алгоритм проверки будет вызывать функции load_final_model и predict_label,
    # остальные функции должны вызываться из вешеперечисленных.

    standard_im = standardize_input(image)
    # predicted_label = model.predict(standard_im) # если вы используете нейронную сеть
    # predicted_label_and_box = encode(predicted_label) # приведение к верному формату
    predicted_label_and_box = [["green", (140, 36, 284, 212)],
                               ["yellow+red", (97, 44, 241, 227)]]

    return predicted_label_and_box
